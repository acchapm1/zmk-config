/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * 
 * keymap by Alan Chapman - https://github.com/acchapm1/zmk-sweep-qwerty
 * Board - Ferris Sweep v2.2
 * Switches - Kailh Choc brown
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
    #define BASE 0
    #define NUM 1
    #define SYM 2
    #define FUNC 3
    #define MACRO 4
	#define SETTINGS 5
// -----------------

&mt {
    //  flavor = "tap-preferred";
    tapping_term_ms = <200>;
};
&sk {
    release-after-ms = <2000>;
    quick-release;
    /delete-property/ ignore-modifiers;
};

/ { 
    macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
		    label = "ZM_unstick";
		    compatible = "zmk,behavior-macro";
		    #binding-cells = <0>;
		    bindings
			    = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
			};
        agave: agave {
            label = "ZM_agave";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings 
                = <&kp A &kp G &kp A &kp V &kp E &kp RET>;
            };
        sol: sol {
            label = "ZM_sol";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings 
                = <&kp S &kp O &kp L &kp RET>;
            };
        sui: sui {
            label = "ZM_sui";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings 
                = <&kp COLON &kp S &kp U &kp I>;
            };        
        sus: sus {
            label = "ZM_sui";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings 
                = <&kp COLON &kp S &kp U &kp S>;
            };
        sua: sua {
            label = "ZM_sui";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings 
                = <&kp COLON &kp S &kp U &kp A>;
            };
		};
    // end macros

        // Combos Keys # Reference
        // --------------------------------------------------------------------------------------------------------------------
        // |   0    |    1    |    2    |    3    |    4    |               |    5    |    6    |    7    |    8    |    9    |
		// |   10   |    11   |    12   |    13   |    14   |               |    15   |    16   |    17   |    18   |    19   |
		// |   20   |    21   |    22c  |    23   |    24   | 				|    25   |    26   |    27   |    28   |    29   |
		//                              |    30   |    31   |				|    32   |    33   |
		// -------------------------------------------------------------------------------------------------------------------- 
    combos {
        compatible = "zmk,combos";
            // Q W
            combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
            // A S
            combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
            // J K
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
            // W T
            combo_lalt {
            timeout-ms = <100>;
            key-positions = <1 4>;
            bindings = <&ray>;
        }; 
            // S D
            combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };  
            // D F
            combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
            // K L
            combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
        // both left thumb keys
			combo_settings {
			timeout-ms = <300>;
			key-positions = <30 31>;
			bindings = <&mo SETTINGS>;
		};  
    };

        keymap {
                compatible = "zmk,keymap";
        // Base Layer 
        // --------------------------------------------------------------------------------------------------------------------
        // |   Q    |    W    |    E    |    R    |    T    |               |    Y    |    U    |    I    |    O    | BkSPC P |
		// |   A    |    S    |    D    |    F    |    G    |               |    H    |    J    |    K    |  NUM L  |    ;    |
		// |   Z    |    X    |    C    |    V    |    B    | 				|    N    | MACRO M |    ,    |    .    |    /    |
		//                              |  LCMD   |  ENTER  |				|  SPACE  |   NUM   |
		// --------------------------------------------------------------------------------------------------------------------       
       	    base_layer {
		bindings = <
		&kp Q      &kp W        &kp E        &mt LG(SPACE) R &kp T 			 &kp Y     &kp U        &kp I    &kp O      &mt BSPC P 
		&kp A      &kp S        &kp D        &kp F           &kp G 			 &kp H     &kp J        &kp K    &lt NUM L  &kp QUOT
		&mt LSFT Z &mt LG(X) X  &mt LG(V) C  &mt LG(V) V     &kp B		     &kp N     &lt MACRO M  &kp CMMA &kp DOT    &kp FSLH
          				                    &kp LCMD         &kp RET   	     &kp SPACE &to NUM 
		>;
		};
        // Numbers and navigation
        // --------------------------------------------------------------------------------------------------------------------
        // |   1    |    2    |    3    |    4    |    5    |               |    6    |    7    |    8    |    9    |    0    |
		// |  ALT   |   GUI   |  SHIFT  |   CRTL  |   RALT  |               |  Left   |  Down   |    UP   |  Right  |    "    |
		// |CapsWord|         |         |   ESC   |   TAB   | 				|    ~    |    =    |    +    |    -    |    \    |
		//                              |  BASE   |  ENTER  |				|  SPACE  |   SYM   |
		// --------------------------------------------------------------------------------------------------------------------
       	    num_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2   &kp NUM_3   &kp NUM_4    &kp NUM_5		    &kp NUM_6   &kp NUM_7    &kp NUM_8   &kp NUM_9    &kp NUM_0 
		&sk LALT   &sk LCMD    &sk LSHFT   &sk LCTL     &sk RALT 		    &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT    &kp DQT 
		&kp ESC    &none       &none       &kp ESC      &kp TAB 	        &kp TILDE   &kp EQUAL    &kp PLUS    &kp MINUS    &kp BSLH 
					                       &to BASE     &kp RET  			&kp SPACE   &to SYM 
		>;
		};
		// Symbols layer
        // --------------------------------------------------------------------------------------------------------------------
        // |   !    |    @    |    #    |    $    |    %    |               |    ^    |    &    |    *    |    (    |    )    |
		// |   `    |    ~    |    |    |    \    |    /    |               |         |         |    <    |    {    |    }    |
		// |        |         |         |         |         | 				|         |         |    >    |    [    |    ]    |
		//                              |  BASE   |  ENTER  |				|  SPACE  |   FUNC  |
		// --------------------------------------------------------------------------------------------------------------------
		    sym_layer {
		bindings = <
		&kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCT    			&kp CRRT   &kp AMPS     &kp STAR  &kp LPRN   &kp RPRN 
		&kp GRAVE  &kp TILDE  &kp PIPE   &kp BSLH   &kp FSLH 			    &none      &none        &kp LT    &kp LBRC   &kp RBRC
		&none      &none      &none      &none      &none        			&none      &none        &kp GT    &kp LBKT   &kp LBKT
					                     &to BASE   &kp RET  				&kp SPACE  &to FUNC 
		>;
		};	
		// Functions
        // --------------------------------------------------------------------------------------------------------------------
        // |   F1   |    F2   |    F3   |    F4   |    F5   |               |    F6   |    F7   |    F8   |    F9   |   F10   |
		// |        |         |         |         |         |               |         |         |         |   F11   |   F12   |
		// |        |         |         |         |         | 				|         |         |         |         |         |
		//                              |  BASE   |  ENTER  |				|  SPACE  |  MACRO  |
		// --------------------------------------------------------------------------------------------------------------------
		    func_layer {
		bindings = <
		&kp F1      &kp F2      &kp F3      &kp F4      &kp F5  			  &kp F6     &kp F7     &kp F8       &kp F9     &kp F10
		&none       &none       &none       &none       &none  			      &none      &none      &none        &kp F11    &kp F12 
		&none       &none       &none       &none       &none  			      &none      &none      &none        &none      &none   
					                        &to BASE    &kp RET  			  &kp SPACE  &to MACRO 
		>;
		};	
        // Macro
        // --------------------------------------------------------------------------------------------------------------------
        // |        |         |         |         |         |               |         |         |         |         | unstick |
		// |  Agave |   Sol   |  :SUI   |  :SUA   |  :SUA   |               |         |         |         |         |         |
		// |        |         |         |         |         | 				|         |         |         |         |         |
		//                              |  BASE   |  ENTER  |				|  SPACE  | SETTINGS |
		// --------------------------------------------------------------------------------------------------------------------
		    macro_layer {
		bindings = <
		&none       &none       &none       &none       &none     		&none       &none       &none       &none       &unstick
		&agave      &sol        &sui        &sus        &sua   			&none       &none       &none       &none       &none 
		&none       &none       &none       &none       &none     		&none       &none       &none       &none       &none  
					                        &to BASE    &kp RET  		&kp SPACE   &to SETTINGS 
		>;
		};
        // Settings
        // --------------------------------------------------------------------------------------------------------------------
        // |BootLdr |         |         |  BT_CLR |  BT 0   |               |   BT 3  |         |         |         |         |
		// |        |         |         |         |  BT 1   |               |   BT 4  |         |         |         |         |
		// | BT_CLR | BT_NXT  | BT_PREV |         |  BT 2   | 				|   BT 5  |         |         |         |         |
		//                              |  BASE   |  ENTER  |				|  SPACE  |  TRANS  |
		// --------------------------------------------------------------------------------------------------------------------
		    ble_layer {
		bindings = <
		&bootloader &none       &none       &bt BT_CLR  &bt BT_SEL 0 			&bt BT_SEL 3   &none    &none    &none     &none
		&none       &none       &none       &none       &bt BT_SEL 1  			&bt BT_SEL 4   &none    &none    &none     &none 
		&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &none       &bt BT_SEL 2  		    &bt BT_SEL 5   &none    &none    &none     &none   
					                        &to BASE    &kp RET  			    &kp SPACE      &trans 
		>;
		};	
    };    
};
